var V=Object.defineProperty;var U=(r,e,t)=>e in r?V(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var l=(r,e,t)=>U(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(a){if(a.ep)return;a.ep=!0;const i=t(a);fetch(a.href,i)}})();var y=(r=>(r.DRAW="draw",r.PLAY="play",r.SCORE="score",r.ROUND_END="round_end",r.CHECKPOINT="checkpoint",r.GAME_END="game_end",r))(y||{}),o=(r=>(r.HENCHMAN="henchman",r.LOCATION="location",r.CRIME="crime",r.GEAR="gear",r))(o||{}),d=(r=>(r.GOON="goon",r.THUG="thug",r.ASSASSIN="assassin",r.HACKER="hacker",r.COMPANION="companion",r.SCIENTIST="scientist",r.WAREHOUSE="warehouse",r.LAB="lab",r.HIDEOUT="hideout",r.BASE="base",r.HEIST="heist",r.SABOTAGE="sabotage",r.INFILTRATION="infiltration",r.TERROR="terror",r.WEAPON="weapon",r.TOOL="tool",r.VEHICLE="vehicle",r.TECH="tech",r))(d||{});const O={id:"armed_goons",description:"Gives +3 to all Goons",type:"aura",targets:{subtype:d.GOON},effect:{add:3}},w={id:"cyber_enhanced",description:"Gives +5 to all Hackers",type:"aura",targets:{subtype:d.HACKER},effect:{add:5}},D={id:"quick_getaway",description:"Gives +2 to all Crimes",type:"aura",targets:{type:o.CRIME},effect:{add:2}},E={id:"henchman_network",description:"+2 for each other Henchman",type:"conditional",targets:{self:!0},condition:{requires:{type:o.HENCHMAN,count:1}},effect:{add:2,perCard:!0}},R={id:"perfect_target",description:"+5 if Location is present",type:"conditional",targets:{self:!0},condition:{requires:{type:o.LOCATION}},effect:{add:5}},k={id:"equipped_saboteur",description:"+3 for each Gear card",type:"conditional",targets:{self:!0},condition:{requires:{type:o.GEAR,count:1}},effect:{add:3,perCard:!0}},q={id:"weapon_researcher",description:"+5 for each Gear card",type:"conditional",targets:{self:!0},condition:{requires:{type:o.GEAR,count:1}},effect:{add:5,perCard:!0}},$={id:"pack_mentality",description:"+2 for each other Companion",type:"conditional",targets:{self:!0},condition:{requires:{subtype:d.COMPANION,count:1}},effect:{add:2,perCard:!0}},F={id:"lazy_goon_persist",description:"Stays for 2 turns",type:"aura",targets:{self:!0},effect:{persistTurns:2}},W={id:"sustainable_researcher",description:"All Gear returns to hand",type:"aura",targets:{type:o.GEAR},effect:{returnToHand:!0}},z={id:"stray_cat_draw",description:"Draw 2 cards if no other Companions",type:"conditional",targets:{self:!0},condition:{requires:{subtype:d.COMPANION,count:0}},effect:{drawCards:2}},Y={id:"good_boy_pack",description:"Next pack +1 card",type:"conditional",targets:{self:!0},effect:{modifyPacks:1}},K={id:"gear_amplifier",description:"Doubles all Gear effects",type:"multiplier",targets:{type:o.GEAR},effect:{multiply:2}},v={id:"strategic_location",description:"Doubles all Henchman scores",type:"multiplier",targets:{type:o.HENCHMAN},effect:{multiply:2}},B={id:"high_tech_lab",description:"Triples score of Tech gear",type:"multiplier",targets:{subtype:d.TECH},effect:{multiply:3}},X={id:"strategic_planning",description:"+5 if played first",type:"conditional",targets:{self:!0},condition:{position:0},effect:{add:5}},H={id:"finishing_move",description:"+3 if played last",type:"conditional",targets:{self:!0},condition:{position:2},effect:{add:3}},L=[{id:"goon_1",name:"Street Goon",type:o.HENCHMAN,subtype:d.GOON,baseScore:2,description:"A basic thug for your schemes",rules:[E],rarity:"common",cost:1},{id:"goon_2",name:"Professional Goon",type:o.HENCHMAN,subtype:d.GOON,baseScore:3,description:"A more experienced street thug",rules:[E],rarity:"uncommon",cost:2},{id:"goon_3",name:"Elite Goon",type:o.HENCHMAN,subtype:d.GOON,baseScore:4,description:"The best muscle money can buy",rules:[E],rarity:"rare",cost:3},{id:"thug_1",name:"Heavy Thug",type:o.HENCHMAN,subtype:d.THUG,baseScore:3,description:"A strong enforcer for your operations",rules:[E],rarity:"common",cost:2},{id:"thug_2",name:"Brutal Thug",type:o.HENCHMAN,subtype:d.THUG,baseScore:4,description:"Intimidation specialist",rules:[E],rarity:"uncommon",cost:2},{id:"thug_3",name:"Demolition Thug",type:o.HENCHMAN,subtype:d.THUG,baseScore:4,description:"Specializes in making things go boom",rules:[E],rarity:"rare",cost:3},{id:"assassin_1",name:"Silent Assassin",type:o.HENCHMAN,subtype:d.ASSASSIN,baseScore:4,description:"A deadly operative for precision work",rules:[E],rarity:"uncommon",cost:3},{id:"assassin_2",name:"Master Assassin",type:o.HENCHMAN,subtype:d.ASSASSIN,baseScore:5,description:"Elite killer with no conscience",rules:[E],rarity:"rare",cost:4},{id:"hacker_1",name:"Cyber Hacker",type:o.HENCHMAN,subtype:d.HACKER,baseScore:3,description:"A tech-savvy operative for digital crimes",rules:[E],rarity:"uncommon",cost:2},{id:"hacker_2",name:"Elite Hacker",type:o.HENCHMAN,subtype:d.HACKER,baseScore:4,description:"Can break any system",rules:[E],rarity:"rare",cost:3},{id:"mastermind_1",name:"The Mastermind",type:o.HENCHMAN,subtype:d.THUG,baseScore:3,description:"Best when leading the operation",rules:[E,X],rarity:"rare",cost:3},{id:"wolf_1",name:"Wolf",type:o.HENCHMAN,subtype:d.COMPANION,baseScore:3,description:"Doubles score for each other Companion",rules:[$],rarity:"common",cost:2},{id:"mad_scientist_1",name:"Mad Scientist",type:o.HENCHMAN,subtype:d.SCIENTIST,baseScore:2,description:"Doubles the effect of all Gear on the board",rules:[K],rarity:"common",cost:2},{id:"weapon_researcher_1",name:"Weapon Researcher",type:o.HENCHMAN,subtype:d.SCIENTIST,baseScore:2,description:"Gets +5 for every Gear on the board",rules:[q],rarity:"common",cost:2},{id:"lazy_goon_1",name:"Lazy Goon",type:o.HENCHMAN,subtype:d.GOON,baseScore:4,description:"Stays on the board for 2 turns",rules:[F],rarity:"common",cost:2},{id:"sustainable_researcher_1",name:"Sustainable Researcher",type:o.HENCHMAN,subtype:d.SCIENTIST,baseScore:3,description:"All Gear returns to your hand",rules:[W],rarity:"uncommon",cost:3},{id:"stray_cat_1",name:"Stray Cat",type:o.HENCHMAN,subtype:d.COMPANION,baseScore:6,description:"Draw 2 cards if no other Companions",rules:[z],rarity:"uncommon",cost:3},{id:"good_boy_1",name:"Good Boy",type:o.HENCHMAN,subtype:d.COMPANION,baseScore:5,description:"Next booster pack has +1 card",rules:[Y],rarity:"uncommon",cost:3},{id:"warehouse_1",name:"Abandoned Warehouse",type:o.LOCATION,subtype:d.WAREHOUSE,baseScore:1,description:"Perfect hideout - doubles henchman effectiveness",rules:[v],rarity:"common",cost:1},{id:"warehouse_2",name:"Secure Warehouse",type:o.LOCATION,subtype:d.WAREHOUSE,baseScore:2,description:"Well-protected storage - doubles henchman effectiveness",rules:[v],rarity:"uncommon",cost:2},{id:"warehouse_3",name:"Port Warehouse",type:o.LOCATION,subtype:d.WAREHOUSE,baseScore:2,description:"Strategic docks location - doubles henchman effectiveness",rules:[v],rarity:"uncommon",cost:2},{id:"lab_1",name:"Secret Lab",type:o.LOCATION,subtype:d.LAB,baseScore:2,description:"High-tech facility - triples tech gear power",rules:[B],rarity:"uncommon",cost:2},{id:"lab_2",name:"Advanced Research Lab",type:o.LOCATION,subtype:d.LAB,baseScore:3,description:"Cutting-edge technology - triples tech gear power",rules:[B],rarity:"rare",cost:3},{id:"hideout_1",name:"Safe House",type:o.LOCATION,subtype:d.HIDEOUT,baseScore:1,description:"A secure place to plan operations",rules:[v],rarity:"common",cost:1},{id:"hideout_2",name:"Fortified Hideout",type:o.LOCATION,subtype:d.HIDEOUT,baseScore:2,description:"Nearly impregnable stronghold",rules:[v],rarity:"uncommon",cost:2},{id:"hideout_3",name:"Penthouse Hideout",type:o.LOCATION,subtype:d.HIDEOUT,baseScore:3,description:"Luxury base with great city views",rules:[v],rarity:"rare",cost:3},{id:"base_1",name:"Underground Base",type:o.LOCATION,subtype:d.BASE,baseScore:3,description:"Secure headquarters - doubles henchman effectiveness",rules:[v],rarity:"rare",cost:4},{id:"base_2",name:"Command Center",type:o.LOCATION,subtype:d.BASE,baseScore:4,description:"Central hub - doubles henchman effectiveness",rules:[v],rarity:"legendary",cost:5},{id:"heist_1",name:"Bank Heist",type:o.CRIME,subtype:d.HEIST,baseScore:8,description:"Classic money-grabbing operation",rules:[R],rarity:"common",cost:2},{id:"heist_2",name:"Casino Heist",type:o.CRIME,subtype:d.HEIST,baseScore:10,description:"Hit the jackpot, literally",rules:[R],rarity:"uncommon",cost:3},{id:"heist_3",name:"Museum Heist",type:o.CRIME,subtype:d.HEIST,baseScore:12,description:"Steal priceless artifacts",rules:[R],rarity:"rare",cost:4},{id:"heist_4",name:"Armored Car Heist",type:o.CRIME,subtype:d.HEIST,baseScore:9,description:"Rob money in transit",rules:[R],rarity:"common",cost:2},{id:"sabotage_1",name:"Industrial Sabotage",type:o.CRIME,subtype:d.SABOTAGE,baseScore:9,description:"Disrupt enemy operations",rules:[k],rarity:"common",cost:2},{id:"sabotage_2",name:"Data Center Sabotage",type:o.CRIME,subtype:d.SABOTAGE,baseScore:11,description:"Bring down their digital infrastructure",rules:[k],rarity:"uncommon",cost:3},{id:"infiltration_1",name:"Corporate Infiltration",type:o.CRIME,subtype:d.INFILTRATION,baseScore:10,description:"Infiltrate and gather intelligence",rules:[],rarity:"uncommon",cost:3},{id:"infiltration_2",name:"Government Infiltration",type:o.CRIME,subtype:d.INFILTRATION,baseScore:12,description:"Access classified information",rules:[],rarity:"rare",cost:4},{id:"terror_1",name:"Intimidation Campaign",type:o.CRIME,subtype:d.TERROR,baseScore:8,description:"Spread fear through the city",rules:[H],rarity:"common",cost:2},{id:"terror_2",name:"Citywide Terror",type:o.CRIME,subtype:d.TERROR,baseScore:11,description:"Paralyze the entire city with fear",rules:[H],rarity:"rare",cost:4},{id:"baseball_bat",name:"Baseball Bat",type:o.GEAR,subtype:d.WEAPON,baseScore:1,description:"Simple but effective - arms your goons",rules:[O],rarity:"common",cost:1},{id:"knife",name:"Combat Knife",type:o.GEAR,subtype:d.WEAPON,baseScore:2,description:"Silent and deadly - arms your goons",rules:[O],rarity:"common",cost:1},{id:"pistol",name:"Pistol",type:o.GEAR,subtype:d.WEAPON,baseScore:3,description:"Standard criminal firearm - arms your goons",rules:[O],rarity:"uncommon",cost:2},{id:"rifle",name:"Assault Rifle",type:o.GEAR,subtype:d.WEAPON,baseScore:5,description:"Military-grade weaponry - arms your goons",rules:[O],rarity:"rare",cost:3},{id:"crowbar",name:"Crowbar",type:o.GEAR,subtype:d.TOOL,baseScore:2,description:"Perfect for breaking and entering",rules:[],rarity:"common",cost:1},{id:"lockpicks",name:"Lockpick Set",type:o.GEAR,subtype:d.TOOL,baseScore:3,description:"Silent entry specialist tools",rules:[],rarity:"uncommon",cost:2},{id:"explosives",name:"Explosives",type:o.GEAR,subtype:d.TOOL,baseScore:4,description:"When subtlety fails",rules:[],rarity:"rare",cost:3},{id:"getaway_car",name:"Getaway Car",type:o.GEAR,subtype:d.VEHICLE,baseScore:3,description:"Fast escape - boosts crime scores",rules:[D],rarity:"uncommon",cost:2},{id:"motorcycle",name:"Sport Motorcycle",type:o.GEAR,subtype:d.VEHICLE,baseScore:2,description:"Quick and agile - boosts crime scores",rules:[D],rarity:"common",cost:1},{id:"helicopter",name:"Helicopter",type:o.GEAR,subtype:d.VEHICLE,baseScore:5,description:"Ultimate escape - boosts crime scores",rules:[D],rarity:"legendary",cost:4},{id:"hacking_rig",name:"Hacking Rig",type:o.GEAR,subtype:d.TECH,baseScore:4,description:"Advanced computer setup - empowers hackers",rules:[w],rarity:"uncommon",cost:3},{id:"surveillance_kit",name:"Surveillance Kit",type:o.GEAR,subtype:d.TECH,baseScore:3,description:"Keep tabs on your targets - empowers hackers",rules:[w],rarity:"uncommon",cost:2}],Q={enabled:!0,frequency:2,startRound:3,difficulty:"medium"},j={0:[{difficulty:"easy",requirement:{type:"card_type_count",description:"Play 1 HENCHMAN card",data:{cardType:o.HENCHMAN,minCount:1}},reward:{currency:25,description:"+25 Villain Bucks"}},{difficulty:"medium",requirement:{type:"card_type_count",description:"Play 2 HENCHMAN cards",data:{cardType:o.HENCHMAN,minCount:2}},reward:{currency:40,description:"+40 Villain Bucks"}},{difficulty:"hard",requirement:{type:"card_type_count",description:"Play 3 HENCHMAN cards",data:{cardType:o.HENCHMAN,minCount:3}},reward:{currency:60,description:"+60 Villain Bucks"}},{difficulty:"medium",requirement:{type:"card_subtype",description:"Play a GOON",data:{cardSubtype:d.GOON,minCount:1}},reward:{currency:30,description:"+30 Villain Bucks"}}],1:[{difficulty:"easy",requirement:{type:"card_type_count",description:"Play 1 GEAR card",data:{cardType:o.GEAR,minCount:1}},reward:{currency:25,description:"+25 Villain Bucks"}},{difficulty:"medium",requirement:{type:"card_type_count",description:"Play 1 LOCATION card",data:{cardType:o.LOCATION,minCount:1}},reward:{currency:35,description:"+35 Villain Bucks"}},{difficulty:"hard",requirement:{type:"synergies_activated",description:"Activate 3+ synergies",data:{minSynergies:3}},reward:{currency:50,description:"+50 Villain Bucks"}},{difficulty:"medium",requirement:{type:"card_subtype",description:"Play a LAB card",data:{cardSubtype:d.LAB,minCount:1}},reward:{currency:35,description:"+35 Villain Bucks"}}],2:[{difficulty:"easy",requirement:{type:"card_type_count",description:"Play 1 CRIME card",data:{cardType:o.CRIME,minCount:1}},reward:{currency:25,description:"+25 Villain Bucks"}},{difficulty:"medium",requirement:{type:"card_type_count",description:"Play 2 CRIME cards",data:{cardType:o.CRIME,minCount:2}},reward:{currency:40,description:"+40 Villain Bucks"}},{difficulty:"hard",requirement:{type:"min_score",description:"Score 30+ points",data:{minScore:30}},reward:{currency:60,description:"+60 Villain Bucks"}},{difficulty:"medium",requirement:{type:"card_subtype",description:"Play a HEIST",data:{cardSubtype:d.HEIST,minCount:1}},reward:{currency:35,description:"+35 Villain Bucks"}}],3:[{difficulty:"medium",requirement:{type:"synergies_activated",description:"Activate 2+ synergies",data:{minSynergies:2}},reward:{currency:35,description:"+35 Villain Bucks"}},{difficulty:"medium",requirement:{type:"diverse_types",description:"Play 3 different card types",data:{uniqueTypes:3}},reward:{currency:40,description:"+40 Villain Bucks"}},{difficulty:"easy",requirement:{type:"min_score",description:"Score 20+ points",data:{minScore:20}},reward:{currency:30,description:"+30 Villain Bucks"}},{difficulty:"hard",requirement:{type:"min_score",description:"Score 35+ points",data:{minScore:35}},reward:{currency:55,description:"+55 Villain Bucks"}}],4:[{difficulty:"easy",requirement:{type:"play_all_cards",description:"Play 3 cards",data:{count:3}},reward:{currency:30,description:"+30 Villain Bucks"}},{difficulty:"medium",requirement:{type:"min_score",description:"Score 25+ points",data:{minScore:25}},reward:{currency:40,description:"+40 Villain Bucks"}},{difficulty:"hard",requirement:{type:"min_score",description:"Score 35+ points",data:{minScore:35}},reward:{currency:60,description:"+60 Villain Bucks"}},{difficulty:"medium",requirement:{type:"card_subtype",description:"Play a TERROR card",data:{cardSubtype:d.TERROR,minCount:1}},reward:{currency:35,description:"+35 Villain Bucks"}}]},J={0:["LORD VEXOR demands a show of power!","LORD VEXOR requires more minions!","LORD VEXOR expects obedience!","LORD VEXOR commands your attention!"],1:["DR. MALICE requests scientific rigor!","DR. MALICE requires proper equipment!","DR. MALICE demands methodology!","DR. MALICE seeks experimental data!"],2:["BARON BLACKGOLD demands profitability!","BARON BLACKGOLD expects returns!","BARON BLACKGOLD requires investment!","BARON BLACKGOLD seeks maximum yield!"],3:["NIGHTSHADE appreciates subtlety...","NIGHTSHADE values precision...","NIGHTSHADE expects elegance...","NIGHTSHADE observes carefully..."],4:["MADAME MAYHEM wants spectacle!","MADAME MAYHEM demands chaos!","MADAME MAYHEM expects EXPLOSIONS!","MADAME MAYHEM craves destruction!"]};function Z(r){const e=j[r];return!e||e.length===0?null:e[Math.floor(Math.random()*e.length)]}function ee(r){const e=J[r];return!e||e.length===0?`Council member ${r} makes a demand!`:e[Math.floor(Math.random()*e.length)]}const te={card_type_count:se,card_subtype:ae,min_score:ie,synergies_activated:re,play_all_cards:ne,diverse_types:oe};function x(r,e){const t=te[r.type];return t?t(r,e):(console.warn(`No evaluator found for requirement type: ${r.type}`),{met:!1})}function se(r,e){const{cardType:t,minCount:s}=r.data,a=e.playedCards.filter(i=>i.card.type===t).length;return{met:a>=s,progress:a,total:s}}function ae(r,e){const{cardSubtype:t,minCount:s=1}=r.data,a=e.playedCards.filter(i=>i.card.subtype===t).length;return{met:a>=s,progress:a,total:s}}function ie(r,e){const{minScore:t}=r.data;return{met:e.roundScore>=t,progress:e.roundScore,total:t}}function re(r,e){const{minSynergies:t}=r.data;return{met:e.synergiesActivated>=t,progress:e.synergiesActivated,total:t}}function ne(r,e){const{count:t}=r.data;return{met:e.playedCards.length>=t,progress:e.playedCards.length,total:t}}function oe(r,e){const{uniqueTypes:t}=r.data,s=new Set(e.playedCards.map(a=>a.card.type));return{met:s.size>=t,progress:s.size,total:t}}class ce{constructor(e){l(this,"state");l(this,"eventListeners",[]);this.state=this.initializeGame(e)}on(e){this.eventListeners.push(e)}off(e){const t=this.eventListeners.indexOf(e);t>-1&&this.eventListeners.splice(t,1)}emit(e){for(const t of this.eventListeners)t(e)}initializeGame(e){const t=e?[...e]:[...L];return this.shuffleDeck(t),{round:1,targetScore:75,hand:t.splice(0,6),playedCards:[],score:0,cumulativeScore:0,checkpoint:5,currency:0,playerDeck:[],deck:t,discardPile:[],playerStats:{totalScore:0,roundsWon:0,roundsLost:0,cardsPlayed:0,synergiesActivated:0},gamePhase:y.PLAY,cardPlayCounts:new Map,packBonusCards:0,permanentPackBonus:0,activeDemand:void 0,demandConfig:{...Q},demandsMet:0}}shuffleDeck(e){for(let t=e.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}}getState(){return{...this.state}}playCard(e,t){if(this.state.gamePhase!==y.PLAY||this.state.playedCards.length>=3)return!1;const s=this.state.hand.findIndex(c=>c.id===e);if(s===-1)return!1;const a=this.state.hand[s],i={card:a,position:t};this.state.hand.splice(s,1),this.state.playedCards.push(i),this.state.playerStats.cardsPlayed++;const n=this.state.cardPlayCounts.get(a.name)||0;return this.state.cardPlayCounts.set(a.name,n+1),this.emit({type:"card_played",card:a,position:t}),this.executeOnPlayEffects(i),!0}unplayCard(e){if(this.state.gamePhase!==y.PLAY)return!1;const t=this.state.playedCards.findIndex(a=>a.card.id===e);if(t===-1)return!1;const s=this.state.playedCards.splice(t,1)[0];return this.state.hand.push(s.card),this.emit({type:"card_unplayed",card:s.card}),!0}endTurn(){if(this.state.gamePhase!==y.PLAY)throw new Error("Cannot end turn in current phase");const e=this.calculateScore();return this.state.score=e.score,this.state.cumulativeScore+=e.score,this.state.gamePhase=y.SCORE,this.state.playerStats.totalScore=this.state.cumulativeScore,this.state.playerStats.synergiesActivated+=e.synergiesActivated.length,this.awardCurrency(e),this.clearDemand(),this.state.round>=this.state.checkpoint&&(e.success=this.state.cumulativeScore>=this.state.targetScore,e.success?(this.state.playerStats.roundsWon++,this.state.currency+=50,this.state.gamePhase=y.CHECKPOINT):(this.state.playerStats.roundsLost++,this.state.gamePhase=y.GAME_END)),e}calculateScore(){const e=this.evaluateAllRules(),t=[];for(const i of this.state.playedCards)i.scoring={baseScore:i.card.baseScore,buffsReceived:[],buffsGiven:[],finalScore:i.card.baseScore};for(const i of e){const n=this.state.playedCards.find(h=>h.card.id===i.sourceCardId),c=this.state.playedCards.find(h=>h.card.id===i.targetCardId);n!=null&&n.scoring&&(c!=null&&c.scoring)&&(n.scoring.buffsGiven.push(i),c.scoring.buffsReceived.push(i),t.includes(i.description)||t.push(i.description))}for(const i of this.state.playedCards){if(!i.scoring)continue;let n=i.scoring.baseScore;for(const c of i.scoring.buffsReceived)c.isMultiplier||(n+=c.value);i.scoring.finalScore=n}for(const i of this.state.playedCards){if(!i.scoring)continue;let n=i.scoring.finalScore;for(const c of i.scoring.buffsReceived)c.isMultiplier&&(n=Math.floor(n*c.value));i.scoring.finalScore=n}const s=this.state.playedCards.reduce((i,n)=>{var c;return i+(((c=n.scoring)==null?void 0:c.finalScore)||n.card.baseScore)},0),a=this.evaluateDemand(s,t.length);return{score:s,targetScore:this.state.targetScore,success:!1,synergiesActivated:t,bonusScore:s-this.state.playedCards.reduce((i,n)=>i+n.card.baseScore,0),demandMet:a.met,demandReward:a.reward}}evaluateAllRules(){const e=[];let t=0;for(const s of this.state.playedCards)for(const a of s.card.rules){if(!this.checkRuleCondition(a,s))continue;const i=this.findRuleTargets(a,s);for(const n of i){const c=this.calculateRuleValue(a,s);e.push({id:`buff_${t++}`,ruleId:a.id,sourceCardId:s.card.id,targetCardId:n.card.id,description:a.description,value:c,isMultiplier:a.effect.multiply!==void 0,applied:!1})}}return e}checkRuleCondition(e,t){if(!e.condition)return!0;if(e.condition.position!==void 0&&t.position!==e.condition.position)return!1;if(e.condition.requires){const s=e.condition.requires,a=this.state.playedCards.filter(n=>!(n.card.id===t.card.id||s.type&&n.card.type!==s.type||s.subtype&&n.card.subtype!==s.subtype)),i=s.count||1;if(a.length<i)return!1}return!0}findRuleTargets(e,t){const s=[];if(e.targets.self)return[t];for(const a of this.state.playedCards)a.card.id!==t.card.id&&(e.targets.type&&a.card.type!==e.targets.type||e.targets.subtype&&a.card.subtype!==e.targets.subtype||e.targets.position!==void 0&&a.position!==e.targets.position||s.push(a));return s}calculateRuleValue(e,t){var a;let s=0;if(e.effect.add!==void 0?s=e.effect.add:e.effect.multiply!==void 0&&(s=e.effect.multiply),e.effect.perCard&&((a=e.condition)!=null&&a.requires)){const i=e.condition.requires,n=this.state.playedCards.filter(c=>!(c.card.id===t.card.id||i.type&&c.card.type!==i.type||i.subtype&&c.card.subtype!==i.subtype));s*=n.length}return s}startNextRound(){if(this.state.gamePhase!==y.SCORE)throw new Error("Cannot start next round in current phase");const e=[],t=[],s=[];for(const n of this.state.playedCards)n.persistsForTurns!==void 0?(n.turnsInPlay=(n.turnsInPlay||0)+1,n.turnsInPlay<n.persistsForTurns?(e.push(n),this.emit({type:"card_persists",card:n.card,turnsRemaining:n.persistsForTurns-n.turnsInPlay})):n.returnToHand?t.push(n.card):s.push(n.card)):n.returnToHand?t.push(n.card):s.push(n.card);this.state.playedCards=e,this.state.hand.push(...t),this.state.discardPile.push(...s),t.length>0&&this.emit({type:"cards_returned_to_hand",cards:t}),this.state.score=0;const a=6-this.state.hand.length,i=[];for(let n=0;n<a&&this.state.deck.length>0;n++){const c=this.state.deck.pop();this.state.hand.push(c),i.push(c)}i.length>0&&this.emit({type:"cards_drawn",cards:i}),this.state.round++,this.state.gamePhase=y.PLAY,this.emit({type:"round_start",round:this.state.round}),this.generateDemand()}getHand(){return[...this.state.hand]}getPlayedCards(){return[...this.state.playedCards]}getCurrentScore(){return this.state.score}getTargetScore(){return this.state.targetScore}getRound(){return this.state.round}getCheckpoint(){return this.state.checkpoint}getCurrency(){return this.state.currency}getPlayerDeck(){return[...this.state.playerDeck]}getPlayerStats(){return{...this.state.playerStats}}awardCurrency(e){let t=0;t+=10,t+=e.synergiesActivated.length*5,this.state.currency+=t}enterCheckpoint(){if(this.state.gamePhase!==y.CHECKPOINT)throw new Error("Not at a checkpoint")}continueToNextCheckpoint(){if(this.state.gamePhase!==y.CHECKPOINT)throw new Error("Can only continue from checkpoint phase");this.state.checkpoint+=5,this.state.targetScore=Math.floor(this.state.targetScore*1.5),this.state.deck.length<10&&(this.state.deck.push(...this.state.discardPile),this.state.discardPile=[],this.shuffleDeck(this.state.deck)),this.state.gamePhase=y.SCORE}restartGame(){this.state=this.initializeGame()}buyBoosterPack(){if(this.state.currency<30)return null;this.state.currency-=30;const t=3+this.state.packBonusCards+this.state.permanentPackBonus,s=[...L],a=[];for(let i=0;i<t;i++){const n=Math.floor(Math.random()*s.length);a.push(s[n])}return this.state.packBonusCards=0,a}addCardToPlayerDeck(e){this.state.playerDeck.push({...e})}mergePlayerDeckIntoGame(){const e=[...L,...this.state.playerDeck];this.shuffleDeck(e),this.state.deck=e,this.state.discardPile=[]}getActiveBuffs(){return this.state.playedCards.length===0?[]:this.evaluateAllRules()}generateDemand(){if(!this.state.demandConfig.enabled)return;const{frequency:e,startRound:t}=this.state.demandConfig;if(this.state.round<t||(this.state.round-t)%e!==0)return;const s=Math.floor(Math.random()*5),a=Z(s);if(!a)return;const i={id:`demand_${this.state.round}_${s}`,councilMemberId:s,round:this.state.round,requirement:a.requirement,reward:a.reward,flavorText:ee(s)};this.state.activeDemand=i,this.emit({type:"demand_generated",demand:i})}evaluateDemand(e,t){if(!this.state.activeDemand)return{met:!1};const s={playedCards:this.state.playedCards,roundScore:e,synergiesActivated:t};if(x(this.state.activeDemand.requirement,s).met){const i=this.state.activeDemand.reward;return i.currency&&(this.state.currency+=i.currency),i.scoreBonus&&(this.state.score+=i.scoreBonus),this.state.demandsMet++,this.emit({type:"demand_met",demand:this.state.activeDemand,reward:i}),{met:!0,reward:i}}return{met:!1}}clearDemand(){this.state.activeDemand&&(this.emit({type:"demand_cleared",demand:this.state.activeDemand}),this.state.activeDemand=void 0)}getActiveDemand(){return this.state.activeDemand}configureDemands(e){this.state.demandConfig={...this.state.demandConfig,...e}}executeOnPlayEffects(e){for(const t of e.card.rules){const s=t.effect;s.persistTurns!==void 0&&(e.persistsForTurns=s.persistTurns,e.turnsInPlay=0,this.emit({type:"card_persists",card:e.card,turnsRemaining:s.persistTurns})),s.returnToHand&&(e.returnToHand=!0);const a=this.checkRuleCondition(t,e);if(s.drawCards&&a){const i=this.drawCards(s.drawCards);i.length>0&&(this.emit({type:"cards_drawn",cards:i,triggeredBy:e.card}),this.emit({type:"effect_triggered",card:e.card,effectDescription:`Draw ${i.length} card${i.length>1?"s":""}`,value:i.length}))}if(s.modifyPacks&&a&&(s.modifyPacksPermanent?(this.state.permanentPackBonus+=s.modifyPacks,this.emit({type:"pack_bonus_added",bonus:s.modifyPacks,triggeredBy:e.card,permanent:!0})):(this.state.packBonusCards+=s.modifyPacks,this.emit({type:"pack_bonus_added",bonus:s.modifyPacks,triggeredBy:e.card,permanent:!1})),this.emit({type:"effect_triggered",card:e.card,effectDescription:`Next pack +${s.modifyPacks} card${s.modifyPacks>1?"s":""}`,value:s.modifyPacks})),s.removeCards&&a){const i=this.removeCardsFromGame(s.removeCards);i.length>0&&(this.emit({type:"cards_removed",cards:i,reason:`Removed by ${e.card.name}`,triggeredBy:e.card}),this.emit({type:"effect_triggered",card:e.card,effectDescription:`Removed ${i.length} card${i.length>1?"s":""} from game`,value:i.length}))}}}drawCards(e){const t=[];for(let s=0;s<e;s++)if(this.state.deck.length===0&&this.state.discardPile.length>0&&(this.state.deck=[...this.state.discardPile],this.state.discardPile=[],this.shuffleDeck(this.state.deck)),this.state.deck.length>0){const a=this.state.deck.pop();this.state.hand.push(a),t.push(a)}return t}removeCardsFromGame(e){const t=[],s=c=>!(e.rarity&&c.rarity!==e.rarity||e.type&&c.type!==e.type),a=this.state.deck.filter(c=>s(c)?(t.push(c),!1):!0);this.state.deck=a;const i=this.state.hand.filter(c=>s(c)?(t.push(c),!1):!0);this.state.hand=i;const n=this.state.discardPile.filter(c=>s(c)?(t.push(c),!1):!0);return this.state.discardPile=n,t}}class S{constructor(e="div",t=""){l(this,"element");l(this,"children",[]);this.element=document.createElement(e),t&&(this.element.className=t)}getElement(){return this.element}addChild(e){this.children.push(e),this.element.appendChild(e.getElement())}removeChild(e){const t=this.children.indexOf(e);t>-1&&(this.children.splice(t,1),this.element.removeChild(e.getElement()))}clearChildren(){this.children.forEach(e=>{this.element.removeChild(e.getElement())}),this.children=[]}setVisible(e){this.element.style.display=e?"":"none"}addClass(e){this.element.classList.add(e)}removeClass(e){this.element.classList.remove(e)}setAttribute(e,t){this.element.setAttribute(e,t)}getAttribute(e){return this.element.getAttribute(e)}}class de extends S{constructor(){super("div","reaction-bubble");l(this,"duration",1500)}render(){}show(t,s){this.element.textContent=t.text,this.element.className="reaction-bubble",this.element.classList.add(`reaction-${t.type}`);const a=this.element.parentElement;if(a){const i=a.querySelectorAll(".council-seat");if(i[s]){const n=i[s],c=a.getBoundingClientRect(),h=n.getBoundingClientRect(),p=h.left-c.left+h.width/2;this.element.style.left=`${p}px`}}this.element.classList.add("visible"),setTimeout(()=>{this.element.classList.remove("visible")},this.duration)}}const P=[{id:0,name:"LORD VEXOR",title:"Ancient Overlord",backstory:"Conquered three dimensions before breakfast. Believes in traditional villainy and loyal minions.",personality:"Demanding, imperious, values hierarchy and power",preferences:[o.HENCHMAN],auraColor:"#9C27B0"},{id:1,name:"DR. MALICE",title:"Mad Scientist",backstory:"Eight PhDs, zero ethics. Perfected the doomsday device but still seeks the perfect scheme.",personality:"Analytical, critical, obsessed with methodology",preferences:[o.GEAR,o.LOCATION],auraColor:"#00E676"},{id:2,name:"BARON BLACKGOLD",title:"Corporate Villain",backstory:'Built an empire through "aggressive acquisitions." Every scheme is an investment.',personality:"Calculating, business-minded, always evaluating ROI",preferences:[o.CRIME],auraColor:"#FFD700"},{id:3,name:"NIGHTSHADE",title:"Master Infiltrator",backstory:"A ghost in the criminal underworld. Never been caught, never been seen. Appreciates elegance.",personality:"Patient, strategic, values subtlety and craftsmanship",preferences:[],auraColor:"#3F51B5"},{id:4,name:"MADAME MAYHEM",title:"Demolitions Expert",backstory:'Turned explosive expertise into criminal artistry. "Go big or go home" is her motto.',personality:"Direct, action-oriented, values spectacle and boldness",preferences:[],auraColor:"#FF6B00"}];function le(r){return P.find(e=>e.id===r)}class ue extends S{constructor(){super("div","demand-banner");l(this,"activeDemand",null);l(this,"isMet",!1);this.element.style.display="none"}render(){}showDemand(t){this.activeDemand=t,this.isMet=!1;const s=le(t.councilMemberId);s&&(this.element.innerHTML=`
      <div class="demand-content" data-member-id="${s.id}">
        <div class="demand-header">
          <div class="demand-member-badge" style="border-color: ${s.auraColor}">
            ${s.name}
          </div>
          <div class="demand-flavor">${t.flavorText}</div>
        </div>

        <div class="demand-body">
          <div class="demand-requirement">
            <span class="requirement-label">REQUIREMENT:</span>
            <span class="requirement-text">${t.requirement.description}</span>
          </div>

          <div class="demand-reward">
            <span class="reward-label">REWARD:</span>
            <span class="reward-text">${t.reward.description}</span>
          </div>
        </div>

        <div class="demand-progress">
          <div class="progress-bar-container">
            <div class="progress-bar-fill" id="demand-progress-fill"></div>
          </div>
          <div class="progress-text" id="demand-progress-text"></div>
        </div>

        <div class="demand-status" id="demand-status"></div>
      </div>
    `,this.element.style.display="block",this.element.classList.add("active"))}updateProgress(t){const s=this.element.querySelector("#demand-progress-fill"),a=this.element.querySelector("#demand-progress-text"),i=this.element.querySelector("#demand-status");if(!(!s||!a||!i)){if(t.total!==void 0&&t.progress!==void 0){const n=Math.min(100,t.progress/t.total*100);s.style.width=`${n}%`,a.textContent=`${t.progress}/${t.total}`}t.met&&!this.isMet&&(this.isMet=!0,i.textContent="✓ DEMAND MET!",i.classList.add("met"),this.element.classList.add("demand-met"))}}markAsMet(){if(!this.isMet){this.isMet=!0;const t=this.element.querySelector("#demand-status");t&&(t.textContent="✓ DEMAND MET!",t.classList.add("met")),this.element.classList.add("demand-met")}}hide(){this.element.classList.remove("active","demand-met"),this.element.style.display="none",this.activeDemand=null,this.isMet=!1}getActiveDemand(){return this.activeDemand}isDemandMet(){return this.isMet}}class he extends S{constructor(){super("div","game-header");l(this,"roundValue",null);l(this,"checkpointValue",null);l(this,"roundScoreValue",null);l(this,"cumulativeScoreValue",null);l(this,"targetValue",null);l(this,"currencyValue",null);l(this,"scoreFill",null);l(this,"councilSeatsContainer",null);l(this,"reactionBubble");l(this,"demandBanner");this.reactionBubble=new de,this.demandBanner=new ue,this.initializeElements()}initializeElements(){this.element.innerHTML=`
      <div class="council-chamber">
        <!-- Left Column: Demand Banner -->
        <div class="header-left" id="header-left">
          <!-- Demand banner will be appended here -->
        </div>

        <!-- Center Column: Council Title & Seats -->
        <div class="header-center">
          <div class="council-title-banner">
            <div class="title-starburst">
              <h1 class="header-title">THE COUNCIL DECIDES</h1>
            </div>
            <div class="council-subtitle">League of Ultimate Evil - Scheme Approval Board</div>
          </div>

          <div class="council-seats">
            ${P.map(t=>`
              <div class="council-seat-container">
                <div class="council-seat" data-member-id="${t.id}"></div>
                <div class="council-nameplate">${t.name}</div>
              </div>
            `).join("")}
          </div>
        </div>

        <!-- Right Column: Metrics -->
        <div class="header-right">
          <div class="council-metrics">
            <div class="metric-box">
              <span class="metric-label">Audience</span>
              <span class="metric-value">
                <span id="round-value">1</span>/<span id="checkpoint-value">5</span>
              </span>
            </div>

            <div class="metric-box">
              <span class="metric-label">Villain Bucks</span>
              <span class="metric-value" id="currency-value">0</span>
            </div>

            <div class="metric-box">
              <span class="metric-label">This Scheme</span>
              <span class="metric-value" id="round-score-value">0</span>
            </div>

            <div class="metric-box approval-box">
              <span class="metric-label">Council Approval</span>
              <div class="approval-bar">
                <div class="approval-fill" id="score-fill" style="width: 0%"></div>
              </div>
              <span class="approval-text">
                <span id="cumulative-score-value">0</span> / <span id="target-value">75</span>
              </span>
            </div>
          </div>
        </div>
      </div>
    `,this.roundValue=this.element.querySelector("#round-value"),this.checkpointValue=this.element.querySelector("#checkpoint-value"),this.currencyValue=this.element.querySelector("#currency-value"),this.roundScoreValue=this.element.querySelector("#round-score-value"),this.cumulativeScoreValue=this.element.querySelector("#cumulative-score-value"),this.targetValue=this.element.querySelector("#target-value"),this.scoreFill=this.element.querySelector("#score-fill"),this.councilSeatsContainer=this.element.querySelector(".council-seats"),this.councilSeatsContainer&&(this.councilSeatsContainer.style.position="relative",this.councilSeatsContainer.appendChild(this.reactionBubble.getElement()))}render(){}updateRound(t,s){this.roundValue&&(this.roundValue.textContent=t.toString()),this.checkpointValue&&(this.checkpointValue.textContent=s.toString())}updateScore(t,s,a){if(this.roundScoreValue&&(this.roundScoreValue.textContent=t.toString()),this.cumulativeScoreValue&&(this.cumulativeScoreValue.textContent=s.toString()),this.targetValue&&(this.targetValue.textContent=a.toString()),this.scoreFill){const i=Math.min(100,s/a*100);this.scoreFill.style.width=`${i}%`}}updateCurrency(t){this.currencyValue&&(this.currencyValue.textContent=t.toString())}showReaction(t){const s=Math.floor(Math.random()*5);this.reactionBubble.show(t,s)}showDemand(t){this.demandBanner.showDemand(t)}updateDemandProgress(t){this.demandBanner.updateProgress(t)}hideDemand(){this.demandBanner.hide()}getDemandBanner(){return this.demandBanner}setupDemandBanner(){const t=document.getElementById("header-left");t&&t.appendChild(this.demandBanner.getElement())}}var f=(r=>(r.DEFAULT="default",r.HOVER="hover",r.SELECTED="selected",r.PLAYABLE="playable",r.DISABLED="disabled",r.BUFFED="buffed",r.PLAYING="playing",r))(f||{});function M(r,e={}){const t=r.baseScore,s=e.finalScore??t,a=s-t;return{card:r,baseScore:t,finalScore:s,scoreChange:a,hasScoreChange:a!==0,buffs:e.buffs??[],buffsReceived:e.buffsReceived??[],buffsGiven:e.buffsGiven??[],uiState:e.uiState??"default",isPlayable:e.isPlayable??!1,isSelected:e.isSelected??!1,onClick:e.onClick,onHover:e.onHover}}class _{constructor(e){l(this,"container");l(this,"displayData");l(this,"scoreElement",null);l(this,"badgeContainer",null);this.displayData=e,this.container=this.createCardElement()}createCardElement(){const e=this.displayData.card,t=this.getTypeColor(e.type),s=this.getRarityColor(e.rarity),a=document.createElement("div");a.className=this.getCardClasses(),a.setAttribute("data-card-id",e.id);const i=document.createElement("div");i.className="card-inner",i.style.borderColor=t;const n=this.createHeader(t);i.appendChild(n);const c=this.createBody();i.appendChild(c);const h=this.createFooter(s);if(i.appendChild(h),e.rules.length>0){const m=this.createRulesSection();i.appendChild(m)}if(a.appendChild(i),this.displayData.buffsReceived.length>0){const m=this.createBuffBadges();this.badgeContainer=m,a.appendChild(m)}const p=this.createTooltip();return a.appendChild(p),a}createHeader(e){const t=document.createElement("div");t.className="card-header";const s=document.createElement("h3");s.className="card-name",s.textContent=this.displayData.card.name;const a=document.createElement("div");return a.className="card-type",a.style.backgroundColor=e,a.textContent=this.displayData.card.type.toUpperCase(),t.appendChild(s),t.appendChild(a),t}createBody(){const e=document.createElement("div");e.className="card-body";const t=this.createScoreDisplay();this.scoreElement=t,e.appendChild(t);const s=document.createElement("p");return s.className="card-description",s.textContent=this.displayData.card.description,e.appendChild(s),e}createScoreDisplay(){const e=document.createElement("div");if(e.className="card-score-container",this.displayData.hasScoreChange){e.classList.add("card-score-buffed");const t=document.createElement("div");t.className="card-score-final",t.textContent=this.displayData.finalScore.toString(),e.appendChild(t);const s=document.createElement("div");s.className="card-score-change",s.textContent=`+${this.displayData.scoreChange}`,e.appendChild(s);const a=document.createElement("div");a.className="card-score-base",a.textContent=this.displayData.baseScore.toString(),e.appendChild(a)}else{const t=document.createElement("div");t.className="card-score",t.textContent=this.displayData.baseScore.toString(),e.appendChild(t)}return e}createFooter(e){const t=document.createElement("div");t.className="card-footer";const s=document.createElement("div");s.className="card-rarity",s.style.color=e,s.textContent=this.displayData.card.rarity.toUpperCase();const a=document.createElement("div");return a.className="card-cost",a.textContent=`Cost: ${this.displayData.card.cost}`,t.appendChild(s),t.appendChild(a),t}createRulesSection(){const e=document.createElement("div");e.className="card-synergies";const t=document.createElement("div");return t.className="synergy-title",t.textContent="Rules:",e.appendChild(t),this.displayData.card.rules.forEach(s=>{const a=document.createElement("div");a.className="synergy-item",a.textContent=s.description,e.appendChild(a)}),e}createTooltip(){const e=this.displayData.card,t=document.createElement("div");t.className="card-tooltip";const s=document.createElement("div");s.className="card-tooltip-title",s.textContent=e.name,t.appendChild(s);const a=document.createElement("div");a.className="card-tooltip-section";const i=document.createElement("div");i.className="card-tooltip-label",i.textContent="Type",a.appendChild(i);const n=document.createElement("div");n.className="card-tooltip-text",n.textContent=`${e.type.toUpperCase()}${e.subtype?` - ${e.subtype}`:""}`,a.appendChild(n),t.appendChild(a);const c=document.createElement("div");c.className="card-tooltip-section";const h=document.createElement("div");h.className="card-tooltip-label",h.textContent="Description",c.appendChild(h);const p=document.createElement("div");if(p.className="card-tooltip-text",p.textContent=e.description,c.appendChild(p),t.appendChild(c),e.rules.length>0){const N=document.createElement("div");N.className="card-tooltip-section";const b=document.createElement("div");b.className="card-tooltip-label",b.textContent="Rules",N.appendChild(b);const A=document.createElement("div");A.className="card-tooltip-rules",e.rules.forEach(G=>{const I=document.createElement("div");I.className="card-tooltip-rule",I.textContent=G.description,A.appendChild(I)}),N.appendChild(A),t.appendChild(N)}const m=document.createElement("div");m.className="card-tooltip-section";const g=document.createElement("div");g.className="card-tooltip-label",g.textContent="Stats",m.appendChild(g);const C=document.createElement("div");return C.className="card-tooltip-text",C.innerHTML=`<strong>Base Score:</strong> ${e.baseScore}<br><strong>Rarity:</strong> ${e.rarity}<br><strong>Cost:</strong> ${e.cost}`,m.appendChild(C),t.appendChild(m),t}createBuffBadges(){const e=document.createElement("div");return e.className="buff-badges",this.displayData.buffsReceived.forEach(t=>{const s=document.createElement("div");s.className=`buff-badge ${t.isMultiplier?"multiplier":"additive"}`,s.textContent=t.isMultiplier?`×${t.value}`:`+${t.value}`,s.title=t.description,e.appendChild(s)}),e}getCardClasses(){const e=["card"],t=this.displayData.uiState;return t!==f.DEFAULT&&e.push(`card-${t}`),this.displayData.buffsReceived.length>0&&e.push("card-buffed"),this.displayData.buffsGiven.length>0&&e.push("card-source"),this.displayData.isPlayable&&e.push("card-playable"),this.displayData.isSelected&&e.push("card-selected"),e.join(" ")}update(e){const t=this.displayData;this.displayData=e,(t.uiState!==e.uiState||t.buffsReceived.length!==e.buffsReceived.length||t.buffsGiven.length!==e.buffsGiven.length)&&(this.container.className=this.getCardClasses()),(t.finalScore!==e.finalScore||t.hasScoreChange!==e.hasScoreChange)&&this.updateScore(),t.buffsReceived.length!==e.buffsReceived.length&&this.updateBadges()}updateScore(){if(!this.scoreElement)return;const e=this.scoreElement.parentElement;if(e){const t=this.createScoreDisplay();e.replaceChild(t,this.scoreElement),this.scoreElement=t}}updateBadges(){if(this.badgeContainer&&(this.badgeContainer.remove(),this.badgeContainer=null),this.displayData.buffsReceived.length>0){const e=this.createBuffBadges();this.badgeContainer=e,this.container.appendChild(e)}}getElement(){return this.container}getTypeColor(e){switch(e){case o.HENCHMAN:return"var(--comic-purple)";case o.LOCATION:return"var(--comic-blue)";case o.CRIME:return"var(--comic-red)";case o.GEAR:return"var(--comic-orange)";default:return"#666"}}getRarityColor(e){switch(e){case"common":return"rgba(255, 255, 255, 0.6)";case"uncommon":return"var(--comic-cyan)";case"rare":return"var(--comic-pink)";case"legendary":return"var(--comic-yellow)";default:return"#666"}}}class T{constructor(e){l(this,"view");l(this,"displayData");this.displayData=e,this.view=new _(e),this.attachEventListeners()}static fromCard(e,t){const s=M(e,{onClick:t});return new T(s)}attachEventListeners(){const e=this.view.getElement();this.displayData.onClick&&e.addEventListener("click",()=>{this.displayData.onClick(this.displayData.card)}),e.addEventListener("mouseenter",()=>{this.handleMouseEnter()}),e.addEventListener("mouseleave",()=>{this.handleMouseLeave()})}handleMouseEnter(){this.displayData.uiState!==f.DISABLED&&(this.updateState(f.HOVER),this.displayData.onHover&&this.displayData.onHover(this.displayData.card))}handleMouseLeave(){this.displayData.isSelected?this.updateState(f.SELECTED):this.displayData.buffsReceived.length>0||this.displayData.buffsGiven.length>0?this.updateState(f.BUFFED):this.displayData.isPlayable?this.updateState(f.PLAYABLE):this.updateState(f.DEFAULT)}updateState(e){this.displayData.uiState!==e&&(this.displayData.uiState=e,this.view.update(this.displayData))}updateDisplayData(e){this.displayData={...this.displayData,...e},e.finalScore!==void 0&&(this.displayData.scoreChange=this.displayData.finalScore-this.displayData.baseScore,this.displayData.hasScoreChange=this.displayData.scoreChange!==0),this.view.update(this.displayData)}setPlayable(e){this.updateDisplayData({isPlayable:e}),e&&this.displayData.uiState===f.DEFAULT&&this.updateState(f.PLAYABLE)}setSelected(e){this.updateDisplayData({isSelected:e}),this.updateState(e?f.SELECTED:f.DEFAULT)}setBuffs(e,t){this.updateDisplayData({buffsReceived:e,buffsGiven:t}),(e.length>0||t.length>0)&&this.updateState(f.BUFFED)}getCard(){return this.displayData.card}getElement(){return this.view.getElement()}getDisplayData(){return{...this.displayData}}updateCard(e){this.displayData.card=e,this.displayData.baseScore=e.baseScore,this.displayData.finalScore!==this.displayData.baseScore&&(this.displayData.scoreChange=this.displayData.finalScore-this.displayData.baseScore,this.displayData.hasScoreChange=this.displayData.scoreChange!==0);const t=this.view.getElement(),s=t.parentElement,a=new _(this.displayData);s&&s.replaceChild(a.getElement(),t),this.view=a,this.attachEventListeners()}}class pe extends S{constructor(){super("div","play-area");l(this,"cardsContainer");l(this,"cardComponents",new Map);l(this,"onCardClick");this.initializeElements()}setOnCardClick(t){this.onCardClick=t}initializeElements(){this.element.innerHTML=`
      <div class="play-area-header">
        <h3 class="area-title">Presenting to Council</h3>
        <div class="scheme-counter">
          <span id="played-count">0</span>/3 Schemes Presented
        </div>
      </div>
      <div class="play-area-cards" id="play-cards">
        <!-- Card slots will be rendered here -->
      </div>
    `,this.cardsContainer=this.element.querySelector("#play-cards")}render(){}updatePlayedCards(t,s=[]){this.cardsContainer.innerHTML="",this.cardComponents.clear();const a=[];for(let n=0;n<3;n++){const c=document.createElement("div");c.className="scheme-slot";const h=document.createElement("div");h.className="slot-badge",h.textContent=`SCHEME #${n+1}`,c.appendChild(h);const p=document.createElement("div");p.className="slot-empty",p.textContent="AWAITING SCHEME",c.appendChild(p),a.push(c)}t.forEach((n,c)=>{var h;if(c<3){const p=a[c].querySelector(".slot-empty");p&&p.remove(),a[c].classList.add("active");const m=s.filter(A=>A.targetCardId===n.card.id),g=s.filter(A=>A.sourceCardId===n.card.id),C=((h=n.scoring)==null?void 0:h.finalScore)??n.card.baseScore,N=M(n.card,{finalScore:C,buffsReceived:m,buffsGiven:g,onClick:this.onCardClick}),b=new T(N);b.setPlayable(!0),this.cardComponents.set(n.card.id,b),a[c].appendChild(b.getElement())}}),a.forEach(n=>this.cardsContainer.appendChild(n));const i=this.element.querySelector("#played-count");i.textContent=t.length.toString()}addCard(t){const s=T.fromCard(t);this.cardComponents.set(t.id,s),this.cardsContainer.appendChild(s.getElement()),this.updateCount()}removeCard(t){const s=this.cardComponents.get(t);s&&(this.cardsContainer.removeChild(s.getElement()),this.cardComponents.delete(t),this.updateCount())}clearCards(){this.cardsContainer.innerHTML="",this.cardComponents.clear(),this.updateCount()}updateCount(){const t=this.element.querySelector("#played-count");t.textContent=this.cardComponents.size.toString()}getCardCount(){return this.cardComponents.size}}class me extends S{constructor(){super("div","hand-area");l(this,"cardsContainer");l(this,"cardComponents",new Map);l(this,"onCardClick");this.initializeElements()}initializeElements(){this.element.innerHTML=`
      <div class="hand-area-header">
        <h3 class="area-title">Your Scheme Portfolio</h3>
        <div class="card-counter">
          <span id="hand-count">0</span>/6 Schemes
        </div>
      </div>
      <div class="hand-cards" id="hand-cards"></div>
    `,this.cardsContainer=this.element.querySelector("#hand-cards")}render(){}setOnCardClick(t){this.onCardClick=t}updateHand(t){this.cardsContainer.innerHTML="",this.cardComponents.clear(),t.forEach(s=>{const a=T.fromCard(s,this.onCardClick);a.setPlayable(!0),this.cardComponents.set(s.id,a),this.cardsContainer.appendChild(a.getElement())}),this.updateCount()}addCard(t){const s=T.fromCard(t,this.onCardClick);s.setPlayable(!0),this.cardComponents.set(t.id,s),this.cardsContainer.appendChild(s.getElement()),this.updateCount()}removeCard(t){const s=this.cardComponents.get(t);s&&(this.cardsContainer.removeChild(s.getElement()),this.cardComponents.delete(t),this.updateCount())}setCardPlayable(t,s){const a=this.cardComponents.get(t);a&&a.setPlayable(s)}setAllCardsPlayable(t){this.cardComponents.forEach(s=>{s.setPlayable(t)})}updateCount(){const t=this.element.querySelector("#hand-count");t.textContent=this.cardComponents.size.toString()}getCardCount(){return this.cardComponents.size}}class ye extends S{constructor(){super("div","game-controls");l(this,"endTurnButton");l(this,"nextRoundButton");l(this,"messageElement");this.initializeElements(),this.setupEventListeners()}initializeElements(){this.element.innerHTML=`
      <div class="controls-left">
        <button id="end-turn-btn" class="btn btn-primary">PRESENT SCHEMES!</button>
        <button id="next-round-btn" class="btn btn-success" disabled>NEXT AUDIENCE</button>
      </div>
      <div class="controls-right">
        <div class="message-display" id="message-display"></div>
      </div>
    `,this.endTurnButton=this.element.querySelector("#end-turn-btn"),this.nextRoundButton=this.element.querySelector("#next-round-btn"),this.messageElement=this.element.querySelector("#message-display")}setupEventListeners(){}render(){}setOnEndTurn(t){this.endTurnButton.addEventListener("click",t)}setOnNextRound(t){this.nextRoundButton.addEventListener("click",t)}updateButtonStates(t,s){switch(t){case"play":this.endTurnButton.disabled=s===0,this.nextRoundButton.disabled=!0;break;case"score":case"checkpoint":case"game_end":this.endTurnButton.disabled=!0,this.nextRoundButton.disabled=!1;break;default:this.endTurnButton.disabled=!0,this.nextRoundButton.disabled=!0}}showMessage(t,s="info"){this.messageElement.textContent=t,this.messageElement.className=`message-display show message-${s}`,setTimeout(()=>{this.messageElement.className="message-display"},3e3)}setEndTurnButtonEnabled(t){this.endTurnButton.disabled=!t}setNextRoundButtonEnabled(t){this.nextRoundButton.disabled=!t}}class fe extends S{constructor(){super("div","game-layout");l(this,"header");l(this,"playArea");l(this,"handArea");l(this,"controls");this.header=new he,this.playArea=new pe,this.handArea=new me,this.controls=new ye,this.setupLayout()}setupLayout(){const t=document.createElement("div");t.className="layout-container",t.appendChild(this.header.getElement()),t.appendChild(this.playArea.getElement()),t.appendChild(this.handArea.getElement()),t.appendChild(this.controls.getElement()),this.element.appendChild(t)}render(){this.header.render(),this.playArea.render(),this.handArea.render(),this.controls.render()}getHeader(){return this.header}getPlayArea(){return this.playArea}getHandArea(){return this.handArea}getControls(){return this.controls}getGameArea(){return{getPlayArea:()=>this.playArea,getHandArea:()=>this.handArea}}getStats(){return this.controls}}class ge extends S{constructor(){super("div","shop-modal");l(this,"currency",0);l(this,"onBuyBooster");l(this,"onSkip");l(this,"buyButton");l(this,"skipButton");l(this,"currencyDisplay");this.element.style.display="none",this.initializeElements()}initializeElements(){this.element.innerHTML=`
      <div class="shop-overlay"></div>
      <div class="shop-content">
        <div class="comic-shop-sign">
          <h2 class="shop-title">THE EVIL EMPORIUM</h2>
          <p class="shop-subtitle">Purveyor of Fine Villainy</p>
        </div>

        <div class="shop-keeper-bubble">
          <p class="shop-message">Fresh schemes just in! Build your evil empire, one card at a time!</p>
        </div>

        <div class="currency-display">
          <span class="currency-label">Villain Bucks:</span>
          <span class="currency-amount" id="shop-currency">0</span>
        </div>

        <div class="shop-items">
          <div class="shop-item">
            <div class="comic-pack-wrapper">
              <div class="pack-shine"></div>
              <div class="pack-icon">PACK</div>
            </div>
            <div class="item-header">
              <h3 class="item-name">Mystery Pack</h3>
              <span class="item-cost">30 Villain Bucks</span>
            </div>
            <p class="item-description">3 random schemes! Pick your favorite!</p>
            <button id="buy-booster-btn" class="btn btn-primary">BUY NOW!</button>
          </div>
        </div>

        <div class="shop-actions">
          <button id="skip-shop-btn" class="btn btn-success">No Thanks, I'm Good</button>
        </div>
      </div>
    `,this.buyButton=this.element.querySelector("#buy-booster-btn"),this.skipButton=this.element.querySelector("#skip-shop-btn"),this.currencyDisplay=this.element.querySelector("#shop-currency"),this.buyButton.addEventListener("click",()=>{this.onBuyBooster&&this.onBuyBooster()}),this.skipButton.addEventListener("click",()=>{this.onSkip&&this.onSkip()})}render(){}show(t){this.currency=t,this.updateCurrencyDisplay(),this.updateBuyButtonState(),this.element.style.display="flex"}hide(){this.element.style.display="none"}updateCurrency(t){this.currency=t,this.updateCurrencyDisplay(),this.updateBuyButtonState()}updateCurrencyDisplay(){this.currencyDisplay&&(this.currencyDisplay.textContent=this.currency.toString())}updateBuyButtonState(){this.buyButton&&(this.buyButton.disabled=this.currency<30)}setOnBuyBooster(t){this.onBuyBooster=t}setOnSkip(t){this.onSkip=t}}class Ee extends S{constructor(){super("div","booster-modal");l(this,"cardComponents",[]);l(this,"onCardSelected");l(this,"cardsContainer");this.element.style.display="none",this.initializeElements()}initializeElements(){this.element.innerHTML=`
      <div class="booster-overlay"></div>
      <div class="booster-content">
        <h2 class="booster-title">Choose One Card</h2>
        <p class="booster-message">Select a card to add to your deck</p>
        <div class="booster-cards" id="booster-cards">
          <!-- Cards will be rendered here -->
        </div>
      </div>
    `,this.cardsContainer=this.element.querySelector("#booster-cards")}render(){}show(t){if(t.length!==3)throw new Error("Booster pack must have exactly 3 cards");this.cardsContainer.innerHTML="",this.cardComponents=[],t.forEach(s=>{const a=M(s,{onClick:()=>{this.onCardSelected&&this.onCardSelected(s)}}),i=new T(a);i.setPlayable(!0),this.cardComponents.push(i);const n=document.createElement("div");n.className="booster-card-wrapper",n.appendChild(i.getElement()),this.cardsContainer.appendChild(n)}),this.element.style.display="flex"}hide(){this.element.style.display="none",this.cardsContainer.innerHTML="",this.cardComponents=[]}setOnCardSelected(t){this.onCardSelected=t}}class Ce{constructor(){l(this,"container");this.container=document.createElement("div"),this.container.className="comic-effects-container",document.body.appendChild(this.container)}show(e,t,s){const a=document.createElement("div");a.className="comic-effect",a.textContent=e,a.style.left=`${t}px`,a.style.top=`${s}px`,this.container.appendChild(a),setTimeout(()=>{a.classList.add("active")},10),setTimeout(()=>{a.remove()},1e3)}showRandom(e,t){const s=["POW!","BAM!","WHAM!","ZAP!","BOOM!","KAPOW!","SMASH!"],a=s[Math.floor(Math.random()*s.length)];this.show(a,e,t)}showForCardType(e,t,s){const i={crime:["SCHEME!","PLOT!","HEIST!"],henchman:["HIRED!","RECRUITED!","GOON!"],location:["LAIR!","HIDEOUT!","BASE!"],gear:["GADGET!","WEAPON!","TECH!"]}[e.toLowerCase()]||["POW!"],n=i[Math.floor(Math.random()*i.length)];this.show(n,t,s)}}class Se{constructor(){l(this,"container");l(this,"isPlaying",!1);this.container=document.createElement("div"),this.container.className="score-cutscene-container",this.container.style.display="none"}async play(e,t,s){if(this.isPlaying)return;this.isPlaying=!0;let a=!1;const i=()=>{a=!0,this.skip()},n=document.querySelector(".game-layout");if(!n){s();return}if(n.classList.add("cutscene-mode"),this.buildCutsceneOverlay(e,t),n.appendChild(this.container),this.container.style.display="flex",setTimeout(()=>{a||(document.addEventListener("click",i,{once:!0}),document.addEventListener("keydown",c=>{(c.key===" "||c.key==="Escape")&&i()},{once:!0}))},300),await this.wait(100),this.container.classList.add("active"),!a){for(let c=0;c<e.length&&!a;c++)await this.animateCard(c),await this.wait(600);a||(await this.animateTotal(),await this.wait(1200))}await this.cleanup(n),this.isPlaying=!1,s()}buildCutsceneOverlay(e,t){this.container.innerHTML=`
      <div class="cutscene-letterbox cutscene-letterbox-top"></div>

      <div class="cutscene-content">
        <div class="cutscene-cards">
          ${e.map((s,a)=>`
            <div class="cutscene-card" data-index="${a}">
              <div class="cutscene-card-name">${s.card.name}</div>
              <div class="cutscene-card-type">${s.card.type}</div>

              <div class="cutscene-scoring-area">
                <div class="base-score-display">
                  <div class="score-label-small">BASE</div>
                  <div class="score-base" data-base="${s.baseScore}">${s.baseScore}</div>
                </div>

                ${s.bonusScore>0||s.synergies.length>0?`
                  <div class="synergy-effects">
                    ${s.synergies.map(i=>`
                      <div class="synergy-shout">${this.getSynergyShout(i)}</div>
                    `).join("")}
                    ${s.bonusScore>0?`
                      <div class="bonus-score-anim">+${s.bonusScore}</div>
                    `:""}
                  </div>
                `:""}

                <div class="final-score-burst">
                  <div class="burst-inner">
                    <div class="score-final" data-final="${s.totalScore}">${s.totalScore}</div>
                    <div class="score-suffix">PTS!</div>
                  </div>
                </div>
              </div>
            </div>
          `).join("")}
        </div>

        <div class="cutscene-total">
          <div class="total-label">TOTAL SCORE</div>
          <div class="total-value">${t}</div>
          <div class="total-suffix">POINTS!</div>
        </div>
      </div>

      <div class="cutscene-letterbox cutscene-letterbox-bottom">
        <div class="skip-hint">Click or press SPACE to skip</div>
      </div>
    `}getSynergyShout(e){const t=["COMBO!","SYNERGY!","BOOM!","POW!","WHAM!","KAPOW!","NICE!","SWEET!"],s=e.length%t.length;return t[s]}async animateCard(e){const t=this.container.querySelector(`.cutscene-card[data-index="${e}"]`);if(!t)return;t.classList.add("active"),await this.wait(400);const s=t.querySelector(".base-score-display");s&&(s.classList.add("show"),await this.wait(300));const a=t.querySelectorAll(".synergy-shout");for(const c of Array.from(a))c.classList.add("show"),await this.wait(200);const i=t.querySelector(".bonus-score-anim");i&&(i.classList.add("show"),await this.wait(300));const n=t.querySelector(".final-score-burst");return n&&(n.classList.add("show"),await this.wait(400)),this.wait(100)}async animateTotal(){const e=this.container.querySelector(".cutscene-total");if(e)return e.classList.add("active"),this.wait(400)}skip(){this.container.querySelectorAll(".cutscene-card").forEach(s=>{s.classList.add("active"),s.querySelectorAll(".base-score-display, .synergy-shout, .bonus-score-anim, .final-score-burst").forEach(a=>a.classList.add("show"))});const t=this.container.querySelector(".cutscene-total");t&&t.classList.add("active")}async cleanup(e){this.container.classList.remove("active"),await this.wait(300),e.classList.remove("cutscene-mode"),this.container.style.display="none",this.container.remove()}wait(e){return new Promise(t=>setTimeout(t,e))}isActive(){return this.isPlaying}}var u=(r=>(r.POSITIVE="positive",r.NEUTRAL="neutral",r.NEGATIVE="negative",r))(u||{});o.HENCHMAN,u.POSITIVE,u.NEUTRAL,u.POSITIVE,u.NEUTRAL,u.POSITIVE,o.CRIME,u.POSITIVE,u.POSITIVE,u.NEUTRAL,u.POSITIVE,u.NEGATIVE,o.LOCATION,u.POSITIVE,u.POSITIVE,u.NEUTRAL,u.POSITIVE,u.NEUTRAL,o.GEAR,u.POSITIVE,u.POSITIVE,u.NEUTRAL,u.POSITIVE,u.NEUTRAL,u.POSITIVE,u.POSITIVE,u.POSITIVE,u.POSITIVE,u.POSITIVE,u.NEUTRAL,u.NEUTRAL,u.NEUTRAL,u.NEUTRAL,u.NEUTRAL,u.NEGATIVE,u.NEGATIVE,u.NEGATIVE,u.NEGATIVE,u.NEGATIVE;const ve={0:{henchman_positive:["LOYAL SERVANTS!","BUILD YOUR ARMY!","PROPER MINIONS!","KNOW YOUR PLACE!"],henchman_neutral:["MORE SUBJECTS!","EXPENDABLE PAWNS!"],crime_positive:["DEMONSTRATE POWER!","CONQUER!","DOMINATE!"],gear_neutral:["TOOLS OF CONQUEST!","ADEQUATE ARMAMENT!"],location_positive:["CLAIM TERRITORY!","EXPAND YOUR DOMAIN!"],high_score:["EXCELLENT!","WORTHY!","THIS PLEASES ME!"],medium_score:["ACCEPTABLE!","PROCEED!"],low_score:["INSUFFICIENT!","PATHETIC!","YOU DARE?!"]},1:{henchman_neutral:["TEST SUBJECTS!","ADEQUATE SPECIMENS!"],crime_neutral:["INTERESTING HYPOTHESIS!","VIABLE APPROACH!"],gear_positive:["FASCINATING DEVICE!","CLEVER ENGINEERING!","INGENIOUS!"],location_positive:["EXCELLENT LAB!","PROPER FACILITIES!","IDEAL WORKSPACE!"],high_score:["SCIENTIFICALLY SOUND!","IMPRESSIVE DATA!","OPTIMAL RESULTS!"],medium_score:["ADEQUATE METHODOLOGY!","ACCEPTABLE VARIABLES!"],low_score:["FLAWED LOGIC!","POOR EXECUTION!","AMATEUR SCIENCE!"]},2:{henchman_neutral:["CHEAP LABOR!","OVERHEAD COSTS!"],crime_positive:["PROFITABLE!","EXCELLENT ROI!","SMART INVESTMENT!","LIQUID ASSETS!"],crime_neutral:["ACCEPTABLE RETURNS!","CALCULATE THE MARGINS!"],gear_neutral:["DEPRECIATING ASSET!","OPERATIONAL EXPENSE!"],location_neutral:["REAL ESTATE VALUE!","OVERHEAD COSTS!"],high_score:["MAXIMUM PROFIT!","EXCELLENT YIELD!","OUTSTANDING RETURNS!"],medium_score:["MODEST GAINS!","BREAK EVEN!"],low_score:["POOR INVESTMENT!","WASTED CAPITAL!","CUTTING LOSSES!"]},3:{henchman_neutral:["USEFUL PAWNS!","DISPOSABLE!"],crime_positive:["ELEGANT!","SUBTLE APPROACH!","WELL CRAFTED!"],crime_neutral:["TOO OBVIOUS!","LACKS FINESSE!"],gear_positive:["PRECISE TOOL!","REFINED!"],location_positive:["STRATEGIC POSITION!","IDEAL VANTAGE!"],high_score:["MASTERFUL!","FLAWLESS EXECUTION!","PERFECTION!"],medium_score:["ADEQUATE!","FUNCTIONAL!"],low_score:["CLUMSY!","AMATEURISH!","SLOPPY!"]},4:{henchman_positive:["BRING THE CHAOS!","MORE BODIES!","UNLEASH THEM!"],crime_positive:["SPECTACULAR!","GO BIG!","MAXIMUM IMPACT!","EXPLOSIVE!"],gear_positive:["DESTRUCTIVE!","POWERFUL TOOL!","BOOM MATERIAL!"],location_neutral:["BLOW IT UP LATER!","GOOD TARGET!"],high_score:["MAGNIFICENT!","EXPLOSIVE SUCCESS!","SPECTACULAR!"],medium_score:["NOT BAD!","DECENT BANG!"],low_score:["WEAK!","WHERE'S THE SPECTACLE?!","BORING!"]}};function be(r,e,t){const s=P[r],a=ve[r];if(!a)return null;let i=[];const n=s.preferences.includes(e);if(t>=8?i=a.high_score||[]:t<=3?i=a.low_score||[]:t>=4&&t<=7&&(i=a.medium_score||[]),i.length===0){const p=n?"positive":"neutral",m=`${e.toLowerCase()}_${p}`;if(i=a[m]||[],i.length===0){const g=Object.keys(a).filter(C=>C.startsWith(e.toLowerCase()));if(g.length>0){const C=g[Math.floor(Math.random()*g.length)];i=a[C]||[]}}}if(i.length===0){const p=Object.keys(a);if(p.length>0){const m=p[Math.floor(Math.random()*p.length)];i=a[m]||[]}}if(i.length===0)return null;const c=i[Math.floor(Math.random()*i.length)];let h=u.NEUTRAL;return t>=8||n?h=u.POSITIVE:t<=3&&(h=u.NEGATIVE),{text:c,type:h}}function Ae(r,e){const t=Math.floor(Math.random()*5);return be(t,r,e)}class Te{constructor(){l(this,"gameEngine");l(this,"layout");l(this,"shop");l(this,"boosterPack");l(this,"comicEffect");l(this,"scoreCutscene");l(this,"isInitialized",!1);try{this.gameEngine=new ce,this.layout=new fe,this.shop=new ge,this.boosterPack=new Ee,this.comicEffect=new Ce,this.scoreCutscene=new Se,this.initializeApp(),this.setupEventListeners(),this.setupShopListeners(),this.layout.getHeader().setupDemandBanner(),this.updateDisplay(),this.showWelcomeMessage(),this.isInitialized=!0}catch(e){console.error("Failed to initialize app:",e),this.handleInitializationError()}}initializeApp(){document.body.appendChild(this.layout.getElement()),document.body.appendChild(this.shop.getElement()),document.body.appendChild(this.boosterPack.getElement()),this.loadStyles()}loadStyles(){}setupShopListeners(){this.shop.setOnBuyBooster(()=>{const e=this.gameEngine.buyBoosterPack();e?(this.shop.updateCurrency(this.gameEngine.getCurrency()),this.boosterPack.show(e)):this.layout.getControls().showMessage("Not enough currency!","error")}),this.shop.setOnSkip(()=>{this.exitShop()}),this.boosterPack.setOnCardSelected(e=>{this.gameEngine.addCardToPlayerDeck(e),this.boosterPack.hide(),this.layout.getControls().showMessage(`Added ${e.name} to your deck!`,"success")})}setupEventListeners(){this.layout.getGameArea().getHandArea().setOnCardClick(e=>{this.playCard(e)}),this.layout.getGameArea().getPlayArea().setOnCardClick(e=>{this.unplayCard(e)}),this.layout.getControls().setOnEndTurn(()=>{this.endTurn()}),this.layout.getControls().setOnNextRound(()=>{const e=this.gameEngine.getState();e.gamePhase==="checkpoint"?this.handleCheckpoint():e.gamePhase==="game_end"?this.handleGameOver():this.startNextRound()})}updateDisplay(){console.time("[Performance] getState");const e=this.gameEngine.getState();console.timeEnd("[Performance] getState"),this.layout.getHeader().updateRound(e.round,e.checkpoint),this.layout.getHeader().updateScore(e.score,e.cumulativeScore,e.targetScore),this.layout.getHeader().updateCurrency(e.currency),console.time("[Performance] getActiveBuffs");const t=this.gameEngine.getActiveBuffs();console.timeEnd("[Performance] getActiveBuffs"),console.time("[Performance] updateHand"),this.layout.getGameArea().getHandArea().updateHand(e.hand),console.timeEnd("[Performance] updateHand"),console.time("[Performance] updatePlayedCards"),this.layout.getGameArea().getPlayArea().updatePlayedCards(e.playedCards,t),console.timeEnd("[Performance] updatePlayedCards"),this.layout.getControls().updateButtonStates(e.gamePhase,e.playedCards.length);const s=this.gameEngine.getActiveDemand();s?(this.layout.getHeader().getDemandBanner().getActiveDemand()||this.layout.getHeader().showDemand(s),e.gamePhase==="play"&&e.playedCards.length>0&&this.updateDemandProgress()):this.layout.getHeader().getDemandBanner().getActiveDemand()&&this.layout.getHeader().hideDemand()}playCard(e){const t=this.gameEngine.getPlayedCards();if(t.length>=3){this.layout.getControls().showMessage("You can only play 3 cards per turn!","error");return}if(this.gameEngine.playCard(e.id,t.length)){const a=window.innerWidth/2,i=window.innerHeight/2;this.comicEffect.showForCardType(e.type,a,i);const n=Ae(e.type,e.baseScore);n&&this.layout.getHeader().showReaction(n),this.updateDisplay();const c=3-this.gameEngine.getPlayedCards().length;c>0?this.layout.getControls().showMessage(`Played ${e.name}! ${c} cards remaining.`,"success"):this.layout.getControls().showMessage(`Played ${e.name}! Ready to end turn.`,"success")}else this.layout.getControls().showMessage("Cannot play that card!","error")}unplayCard(e){this.gameEngine.unplayCard(e.id)?(this.updateDisplay(),this.layout.getControls().showMessage(`Returned ${e.name} to hand.`,"info")):this.layout.getControls().showMessage("Cannot return that card!","error")}endTurn(){try{console.time("[Performance] endTurn"),console.time("[Performance] gameEngine.endTurn");const e=this.gameEngine.endTurn();console.timeEnd("[Performance] gameEngine.endTurn");const s=this.gameEngine.getPlayedCards().map(a=>{var i,n,c,h,p,m;return{card:a.card,baseScore:((i=a.scoring)==null?void 0:i.baseScore)||a.card.baseScore,bonusScore:(((n=a.scoring)==null?void 0:n.finalScore)||0)-(((c=a.scoring)==null?void 0:c.baseScore)||a.card.baseScore),totalScore:((h=a.scoring)==null?void 0:h.finalScore)||a.card.baseScore,synergies:((m=(p=a.scoring)==null?void 0:p.buffsReceived)==null?void 0:m.map(g=>g.description))||[]}});this.scoreCutscene.play(s,e.score,()=>{console.time("[Performance] updateDisplay"),this.updateDisplay(),console.timeEnd("[Performance] updateDisplay"),console.timeEnd("[Performance] endTurn");const a=this.gameEngine.getState();if(a.gamePhase==="checkpoint")this.layout.getControls().showMessage(`Checkpoint ${a.checkpoint} reached! Score: ${a.cumulativeScore}/${a.targetScore}. Welcome to the shop!`,"success");else if(a.gamePhase==="game_end")this.layout.getControls().showMessage(`Game Over! Failed to reach ${a.targetScore} by round ${a.checkpoint}. Score: ${a.cumulativeScore}. Starting over...`,"error");else{const i=e.synergiesActivated.length>0?` Synergies: ${e.synergiesActivated.join(", ")}`:"";this.layout.getControls().showMessage(`Round ${a.round} complete! Scored ${e.score} points.${i} Total: ${a.cumulativeScore}/${a.targetScore}`,"info")}})}catch{this.layout.getControls().showMessage("Cannot end turn right now!","error")}}startNextRound(){this.gameEngine.startNextRound(),this.updateDisplay();const e=this.gameEngine.getState();this.layout.getControls().showMessage(`Round ${e.round} started! Checkpoint at round ${e.checkpoint}. Total: ${e.cumulativeScore}/${e.targetScore}`,"info")}handleCheckpoint(){const e=this.gameEngine.getCurrency();this.shop.show(e)}exitShop(){this.shop.hide(),this.gameEngine.mergePlayerDeckIntoGame(),this.gameEngine.continueToNextCheckpoint(),this.startNextRound();const e=this.gameEngine.getPlayerDeck().length;this.layout.getControls().showMessage(`Continuing to next checkpoint! New target: ${this.gameEngine.getTargetScore()}. Deck size: ${e} bonus cards`,"success")}handleGameOver(){this.gameEngine.restartGame(),this.updateDisplay(),this.showWelcomeMessage()}showWelcomeMessage(){const e=this.gameEngine.getTargetScore(),t=this.gameEngine.getCheckpoint();this.layout.getControls().showMessage(`Welcome! Reach ${e} points by round ${t}. Play up to 3 cards per round from your hand of 6!`,"info")}getGameEngine(){return this.gameEngine}getLayout(){return this.layout}isReady(){return this.isInitialized}destroy(){try{this.layout&&this.layout.getElement().remove(),this.isInitialized=!1}catch(e){console.error("Error during app cleanup:",e)}}updateDemandProgress(){const e=this.gameEngine.getActiveDemand();if(!e)return;const t=this.gameEngine.getState(),s=this.gameEngine.getActiveBuffs();let a=0;for(const c of t.playedCards){let h=c.card.baseScore;const p=s.filter(m=>m.targetCardId===c.card.id);for(const m of p)m.isMultiplier||(h+=m.value);for(const m of p)m.isMultiplier&&(h=Math.floor(h*m.value));a+=h}const i={playedCards:t.playedCards,roundScore:a,synergiesActivated:s.length},n=x(e.requirement,i);this.layout.getHeader().updateDemandProgress(n)}handleInitializationError(){const e=document.createElement("div");e.className="error-container",e.innerHTML=`
      <div class="error-content">
        <h2>Failed to Load Game</h2>
        <p>There was an error initializing the game. Please refresh the page to try again.</p>
        <button onclick="location.reload()" class="btn btn-primary">Reload Page</button>
      </div>
    `,document.body.appendChild(e)}}document.addEventListener("DOMContentLoaded",()=>{const r=new Te;typeof window<"u"&&(window.gameApp=r)});
